[alias]
  l  = log --graph --decorate --pretty=oneline --abbrev-commit
  lg = log --graph --decorate --pretty=oneline --abbrev-commit

  # View the current working tree status using the short format
  s = status -s

  # View the current working tree status
  st = status

  # Show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"

  # `git di $number` shows the diff between the state `$number` revisions ago and the current state
  di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

  # Commit all changes
  ca = !git add -A && git commit -av

  # Switch to a branch, creating it if necessary
  go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v

  # Amend the currently staged files to the latest commit
  amend = commit --amend --reuse-message=HEAD

  # Remove branches that have already been merged with master
  # a.k.a. ‘delete merged’
  dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

  # List contributors with number of commits
  contributors = shortlog --summary --numbered

  br = branch

  co = checkout
[user]
  name = Artyom Keydunov
  email = artyom.keydunov@gmail.com
[core]
  editor = vim
  quotepath = false
  precomposeunicode = true
[color]
  ui = true
[push]
  default = simple
[github]
  user = keydunov
[help]
  # Automatically correct and execute mistyped commands
  autocorrect = 1
[merge]
  # Include summaries of merged commits in newly created merge commit messages
  log = true
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
